// Generated by ChatGPT and Riko Balakit/Pearl Grey
using System;
using GSA;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

public class Quit : MonoBehaviour
{
    private float _timeClickedDown;
    private bool _isClicked = false;
    private bool _startButtonHeld = false;

    [SerializeField]
    private RectTransform _loadingBarRect;

    private const float _timeToHoldToQuit = 1f;

    private void Update()
    {
        // Check if the Start button is pressed
        if (InputManager.I.StartButton)
        {
            if (!_startButtonHeld)
            {
                OnClickDown();
                _startButtonHeld = true;
            }
        }
        else
        {
            if (_startButtonHeld)
            {
                OnClickUp();
                _startButtonHeld = false;
            }
        }

        // If clicked, update the loading bar animation
        if (_isClicked)
        {
            var elapsedTime = Time.time - _timeClickedDown;
            var inverseElapsedTimeFraction = 1f - (elapsedTime / _timeToHoldToQuit);

            if (elapsedTime > _timeToHoldToQuit)
            {
                QuitApp();
            }

            _loadingBarRect.anchoredPosition = new Vector2(-125f * inverseElapsedTimeFraction, 0f);
            _loadingBarRect.sizeDelta = new Vector2(-250f * inverseElapsedTimeFraction, 0f);
        }
        else
        {
            _loadingBarRect.anchoredPosition = new Vector2(-125f, 0f);
            _loadingBarRect.sizeDelta = new Vector2(-250f, 0f);
        }
    }

    public void OnClickDown()
    {
        _isClicked = true;
        _timeClickedDown = Time.time;
    }

    public void OnClickUp()
    {
        _isClicked = false;
        var elapsedTime = Time.time - _timeClickedDown;

        if (elapsedTime < _timeToHoldToQuit)
        {
            ReloadScene();
        }
        else
        {
            QuitApp();
        }
    }

    public void ReloadScene()
    {
        SceneManager.LoadScene(SceneManager.GetActiveScene().name);
    }

    public void QuitApp()
    {
        Debug.LogError("Quitting application");
        Application.Quit();

#if UNITY_EDITOR
        Debug.LogError("Quitting application IN EDITOR");
        UnityEditor.EditorApplication.isPlaying = false;
#endif
    }
}
